<project name="goobi-viewer-desktop" default="installer">

	<property name="version" value="1.3.0" />
	<property name="installer-name" value="Goobi-viewer-Desktop-Client" />
	<property name="product-name" value="Goobi-viewer-Desktop-Client" />
	<property name="output-dir" value="out" />
	<property name="nsisant-path" value="lib-build/nsisant-1.3.jar" />
	<property name="nsis-path" value="/usr/bin/" />
	<property name="installer-icon" value="assets/icons/app_32.ico" />
	<property name="make-result-path" value="out/make/deb/x64/" />
	<property name="config-path" value="src/configs" />
	<property name="locales-path" value="locales" />
	<property name="icons-path" value="assets/icons" />
	<property name="nsisfile-path" value="setup.nsi" />
	
	<taskdef name="nsis" classname="com.danielreese.nsisant.Task" classpath="${nsisant-path}" />
	
	<target name="installer-wuw" description="Build windows installer for https://viewer.wu.ac.at/viewer">
		<settheme theme="themes/wuw"/>
		<echo message="Building NSIS installer for WUW..." />
		<antcall target="installer-windows">
			<param name="product" value="Virtueller Lesesaal der Wirtschaftsuniversität Wien"/>
			<param name="installer" value="Virtueller Lesesaal der Wirtschaftsuniversität Wien"/>
		</antcall>
		<antcall target="cleanup"/>
	</target>
	
	<target name="installer" description="Build installer for windows and linux systems">
		<antcall target="installer-linux"></antcall>
		<antcall target="installer-windows">
			<param name="product" value="${product-name}"/>
			<param name="installer" value="${installer-name}"/>
		</antcall>
	</target>
	
	<target name="installer-windows" description="Build installer producing a windows executable installer file using nsis" depends="make-windows">
		<echo message="Building NSIS installer..." />
		<nsis script="setup.nsi" path="${nsis-path}" verbosity="4" noconfig="no">
			<define name="PRODUCTPATH" value="${output-dir}/${product}-win32-x64/*" />
			<define name="VERSION" value="${version}" />
			<define name="PATH_OUTFILE" value="${output-dir}/${installer}_${version}.exe" />
			<define name="MUI_ICON" value="${installer-icon}" />
		</nsis>
	</target>
	
	<target name="installer-linux" description="Build installer producing a Debian-package for Ubuntu systems" depends="make-linux">
		<echo message="Copying installer to ${output-dir}" />
		<copy todir="${output-dir}" flatten="true">
	  		<fileset dir="${make-result-path}"/>
	  	</copy>
	</target>
	
	<target name="npm" description="Install npm dependencies">
		<exec executable="npm">
			<arg value="install"/>
		</exec>
	</target>
	
	<target name="make-linux" description="Create product files for linux environment" depends="npm">
		<echo message="Building .deb installer..." />
		<exec executable="npx">
			<arg value="electron-forge"/>
			<arg value="make"/>
		</exec>
	</target>
	
	<target name="make-windows" description="Create product files for windows environment" depends="npm">
			<echo message="Packaging windows program files" />
			<exec executable="npx">
				<arg value="electron-forge"/>
				<arg value="package"/>
				<arg value="--platform=win32"/>
			</exec>
	</target>

	<target name="cleanup" description="Replaces files changed by another target with the original values">
		<settheme theme="themes/default"/>
	</target>
	
	<macrodef name="settheme" description="Replaces the default configuration files in 'src/configs' and 'locales' with the files from the folder specified in ${theme}">
		<attribute name="theme"/>
		<sequential>
			<copy todir="${config-path}" flatten="false" overwrite="true" verbose="true">
		  		<fileset dir="@{theme}/config"/>
		  	</copy>
			<copy todir="${locales-path}" flatten="false" overwrite="true" verbose="true">
				<fileset dir="@{theme}/locales"/>
			</copy>
			<copy todir="${icons-path}" flatten="false" overwrite="true" verbose="true">
				<fileset dir="@{theme}/icons"/>
			</copy>
			<copy tofile="${nsisfile-path}" flatten="false" overwrite="true" verbose="true">
				<fileset file="@{theme}/${nsisfile-path}"/>
			</copy>
		</sequential>
	</macrodef>
	
</project>